// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_URL")
  relationMode = "prisma"
}

model User {
  id                Int                @id @default(autoincrement())
  name              String
  email             String
  phone_no          String            @default("None")
  education_level   String            @default("None")
  employment_status String            @default("None")
  password         String             @default("12345678")
  UserTrackMapping  UserTrackMapping[]
  UserExamMapping   UserExamMapping[]
}

// Define the Skill model
model Skill {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)
  Exam Exam[]
}

// Define the Track model
model Track {
  id               Int                @id @default(autoincrement())
  name             String 
  description      String            @default("None")
  ExamTrackMapping ExamTrackMapping[]
  UserTrackMapping UserTrackMapping[]
}

// Define the Exam model
model Exam {
  id              Int                @id @default(autoincrement())
  exam_name       String
  skillsId        Int
  difficulty      String
  skills          Skill              @relation(fields: [skillsId], references: [id])
  examTrackMap    ExamTrackMapping[]
  Image           Image[]
  Question        Question[]
  UserExamMapping UserExamMapping[]
  @@index([skillsId], name: "skillsId")
}

// Define the ExamTrackMapping model
model ExamTrackMapping {
  id       Int   @id @default(autoincrement())
  exam_id  Int
  track_id Int
  exam     Exam  @relation(fields: [exam_id], references: [id])
  track    Track @relation(fields: [track_id], references: [id])
  @@index([exam_id], name: "exam_id")
  @@index([track_id], name: "track_id")
}

// Define the UserTrackMapping model
model UserTrackMapping {
  id       Int   @id @default(autoincrement())
  user_id  Int
  track_id Int
  user     User  @relation(fields: [user_id], references: [id])
  track    Track @relation(fields: [track_id], references: [id])
  @@index([user_id], name: "user_id")
  @@index([track_id], name: "track_id")
}

// Define the Image model
model Image {
  id          Int      @id @default(autoincrement())
  exam_id     Int
  question_id Int
  exam        Exam     @relation(fields: [exam_id], references: [id])
  question    Question @relation(fields: [question_id], references: [id])
  @@index([exam_id], name: "exam_id")
  @@index([question_id], name: "question_id")
}

// Define the Question model
model Question {
  id      Int      @id @default(autoincrement())
  exam_id Int
  text    String
  options String
  answers Answer[]
  exam    Exam     @relation(fields: [exam_id], references: [id])
  Image   Image[]
  @@index([exam_id], name: "exam_id")
}

// Define the Answer model
model Answer {
  id          Int      @id @default(autoincrement())
  question_id Int
  answers     String
  question    Question @relation(fields: [question_id], references: [id])
  @@index([question_id], name: "question_id")
}

// Define the UserExamMapping model
model UserExamMapping {
  id      Int  @id @default(autoincrement())
  exam_id Int
  user_id Int
  score   Int  @default(0)
  exam    Exam @relation(fields: [exam_id], references: [id])
  user    User @relation(fields: [user_id], references: [id])
  @@index([exam_id], name: "exam_id")
  @@index([user_id], name: "user_id")
}
